model:
  target: models.unet.UNetModelSwin
  ckpt_path: ~
  params:
    image_size: 64
    in_channels: 6
    model_channels: 160
    out_channels: 3
    cond_lq: True
    attention_resolutions: [64,32,16,8]
    dropout: 0
    channel_mult: [1, 2, 2, 4]
    num_res_blocks: [2, 2, 2, 2]
    conv_resample: True
    dims: 2
    use_fp16: False
    num_head_channels: 32
    use_scale_shift_norm: True
    resblock_updown: False
    swin_depth: 2
    swin_embed_dim: 192
    window_size: 8
    mlp_ratio: 4

diffusion:
  target: models.script_util.create_gaussian_diffusion
  params:
    sf: 4
    schedule_name: exponential
    schedule_kwargs:
      power: 0.5
    etas_end: 0.99
    steps: 20
    min_noise_level: 0.04
    kappa: 2.0
    weighted_mse: False
    predict_type: xstart
    timestep_respacing: ~
    scale_factor: 1.0
    normalize_input: True
    latent_flag: True

autoencoder:
  target: ldm.models.autoencoder.VQModelTorch
  ckpt_path: weights/autoencoder/autoencoder_vq_f4.pth
  use_fp16: True
  params:
    embed_dim: 3
    n_embed: 8192
    ddconfig:
      double_z: False
      z_channels: 3
      resolution: 256
      in_channels: 3
      out_ch: 3
      ch: 128
      ch_mult:
      - 1
      - 2
      - 4
      num_res_blocks: 2
      attn_resolutions: []
      dropout: 0.0
      padding_mode: zeros

data:
  train:
    type: bsrganimagenet
    params:
      dir_paths: ~
      txt_file_path: [
                      '/mnt/lustre/zsyue/disk/data/ImageNet/train/image_path_all.txt', 
                      '/mnt/lustre/zsyue/disk/data/FFHQ/files_txt/ffhq256.txt',
                     ] 
      sf: 4
      gt_size: 256
      length: ~
      need_path: False
      im_exts: ['png', 'jpg', 'jpeg', 'JPEG', 'bmp']
      mean: 0.5
      std: 0.5
      recursive: True
      degradation: bsrgan_light
      use_sharp: True
  val:
    type: folder
    params:
      dir_path: testdata/RealSet128/
      dir_path_extra: ~
      transform_type: default
      transform_kwargs:
          mean: 0.5
          std: 0.5
      im_exts: png
      length: ~
      recursive: False

train:
  lr: 5e-5
  batch: [64, 8]   # batchsize for training and validation
  use_fp16: False
  microbatch: 8
  seed: 123456
  global_seeding: False
  prefetch_factor: 4
  num_workers: 8
  ema_rate: 0.999
  iterations: 500000
  milestones: [5000, 2000000]
  weight_decay: 0
  save_freq: 10000
  val_freq: 10000
  log_freq: [1000, 5000, 1] #[training loss, training images, val images]
  save_images: True  # save the images of tensorboard logging
  use_ema_val: True
